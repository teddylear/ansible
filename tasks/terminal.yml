# TODO: How to automate font on ubuntu
- name: Install zsh
  become: yes
  apt:
    name: zsh
  when: ansible_distribution == "Ubuntu"
  tags:
    - terminal
    - ubuntu
- name: zsh path
  shell: which zsh
  register: zsh_path
  tags:
    - terminal
- name: Change shell to zsh
  become: yes
  shell: chsh -s {{ zsh_path.stdout }}
  tags:
    - terminal
- name: Tap nerd fonts
  community.general.homebrew_tap:
    name: homebrew/cask-fonts
    state: present
  when: ansible_distribution == "MacOSX"
  tags:
    - terminal
    - macos
- name: Install fonts
  community.general.homebrew_cask:
    name: font-hack-nerd-font
    state: present
  when: ansible_distribution == "MacOSX"
  tags:
    - terminal
    - macos
- name: Install alacritty
  community.general.homebrew_cask:
    name: alacritty
    state: upgraded
  when: ansible_distribution == "MacOSX"
  tags:
    - terminal
    - macos
- name: Install alacritty apt repository
  apt_repository:
    repo: ppa:aslatter/ppa
    state: present
    update_cache: True
  when: ansible_distribution == "Ubuntu"
  tags:
    - terminal
    - ubuntu
- name: Install alacritty
  apt:
    name: alacritty
    state: latest
  when: ansible_distribution == "Ubuntu"
  tags:
    - terminal
    - ubuntu
# TODO: Make this only do this if zsh not the default
# - name: Set zsh as default if not using zsh currently
  # shell: chsh -s $(which zsh)
  # tags:
    # - terminal
- name: oh-my-zsh
  ansible.builtin.git:
    repo: 'https://github.com/robbyrussell/oh-my-zsh'
    dest: "{{ lookup('env', 'HOME') }}/oh-my-zsh"
    force: yes
    accept_hostkey: yes
  tags:
    - terminal
# - name: oh-my-zsh spaceship
  # shell: curl -o - https://raw.githubusercontent.com/denysdovhan/spaceship-zsh-theme/master/install.zsh | zsh
  # when: ansible_distribution == "Ubuntu"
  # tags:
    # - terminal
    # - macos
- name: Install Terminal stuff ubuntu
  become: yes
  apt:
    name: ["zsh-autosuggestions", "zsh-syntax-highlighting"]
    state: latest
  when: ansible_distribution == "Ubuntu"
  tags:
    - terminal
    - ubuntu
- name: Install Terminal stuff macos
  community.general.homebrew:
    name: ["spaceship", "zsh-autosuggestions", "zsh-syntax-highlighting"]
    state: latest
  when: ansible_distribution == "MacOSX"
  tags:
    - terminal
    - macos
- name: Check for neofetch Installation
  shell: which neofetch
  register: neofetch_installed
  ignore_errors: yes
  tags:
    - terminal
    - neofetch
- name: Install neofetch macos
  community.general.homebrew:
    name: "neofetch"
    state: latest
  when: ansible_distribution == "MacOSX" and neofetch_installed is failed
  tags:
    - terminal
    - neofetch
    - macos
- name: Install neofetch Ubuntu
  become: yes
  apt:
    name: "neofetch"
    state: latest
  when: ansible_distribution == "Ubuntu" and neofetch_installed is failed
  tags:
    - terminal
    - neofetch
    - ubuntu
- name: Check for Mcfly Installation
  shell: which mcfly
  register: mcfly_installed
  ignore_errors: yes
  tags:
    - terminal
    - mcfly
- name: Tap Mcfly macos
  community.general.homebrew_tap:
    name: cantino/mcfly
    state: present
  when: ansible_distribution == "MacOSX" and mcfly_installed is failed
  tags:
    - terminal
    - mcfly
    - macos
- name: Install Mcfly macos
  community.general.homebrew:
    name: "mcfly"
    state: latest
  when: ansible_distribution == "MacOSX" and mcfly_installed is failed
  tags:
    - terminal
    - mcfly
    - macos
- name: Install Mcfly Ubuntu
  shell: curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
  become: yes
  when: ansible_distribution == "Ubuntu" and mcfly_installed is failed
  tags:
    - terminal
    - mcfly
    - ubuntu
- name: Check exa installed
  ansible.builtin.shell: type exa
  register: check_exa
  ignore_errors: true
  tags:
    - terminal
    - exa
- name: Install exa linux
  become: yes
  # TODO: How to make this grab latest?
  ansible.builtin.shell: |
    wget -c http://old-releases.ubuntu.com/ubuntu/pool/universe/r/rust-exa/exa_0.9.0-4_amd64.deb
    apt-get install ./exa_0.9.0-4_amd64.deb
  args:
      chdir: "{{ lookup('env', 'HOME') }}/Downloads"
  when: ansible_distribution == "Ubuntu" and check_exa.rc != 0
  tags:
    - terminal
    - exa
- name: Install exa macos
  community.general.homebrew:
    name: "exa"
    state: latest
  when: ansible_distribution == "MacOSX" and check_exa.rc != 0
  tags:
    - terminal
    - exa
- name: Confirm $HOME/.local/bin directory
  file:
    path: "{{ lookup('env', 'HOME') }}/.local/bin"
    state: directory
  when: ansible_distribution == "Ubuntu"
  tags:
    - terminal
    - fd
- name: Check fd installed
  ansible.builtin.shell: type fd
  register: check_fd
  ignore_errors: true
  tags:
    - terminal
    - fd
- name: Install fd linux
  become: yes
  ansible.builtin.shell: apt install fd-find
  when: ansible_distribution == "Ubuntu" and check_fd.rc != 0
  tags:
    - terminal
    - fd
- name: Linux fd Ubuntu
  ansible.builtin.shell: ln -s $(which fdfind) ~/.local/bin/fd
  when: ansible_distribution == "Ubuntu" and check_fd.rc != 0
  tags:
    - terminal
    - fd
- name: Install fd macos
  community.general.homebrew:
    name: "fd"
    state: latest
  when: ansible_distribution == "MacOSX" and check_fd.rc != 0
  tags:
    - terminal
    - fd
- name: Check bat installed
  ansible.builtin.shell: type bat
  register: check_bat
  ignore_errors: true
  tags:
    - terminal
    - bat
- name: Install bat
  ansible.builtin.shell: cargo install --locked bat
  when:  check_bat.rc != 0
  tags:
    - terminal
    - bat
- name: Check mprocs installed
  ansible.builtin.shell: type mprocs
  register: check_mprocs
  ignore_errors: true
  tags:
    - terminal
    - mprocs
- name: Install mprocs
  ansible.builtin.shell: cargo install mprocs
  when:  check_mprocs.rc != 0
  tags:
    - terminal
    - mprocs
