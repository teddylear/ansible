# TODO: pyenv ubuntu
# TODO: tfenv ubuntu
# TODO: pkenv ubuntu
# TODO: fix flips back to system python
# - name: Install pipenv
  # community.general.homebrew:
    # name:  pipenv
    # state: latest
  # when: ansible_distribution == "MacOSX"
  # tags:
    # - devTools
    # - macos
    #
- name: devTools Macos
  community.general.homebrew:
    name: ["pipenv", "pyenv", "tfenv", "pkenv", "tmux", "ripgrep", "docker", "tree", "jq", "luarocks", "fzf"]
    state: latest
  when: ansible_distribution == "MacOSX"
  tags:
    - devTools
    - macos
- name: devtools Ubuntu
  apt:
    name: ["pipenv", "luarocks", "jq", "tree", "tmux", "docker", "ripgrep", "fzf"]
    state: latest
  when: ansible_distribution == "Ubuntu"
  become: yes
  tags:
    - devTools
    - ubuntu
- name: Install tmux plugin manager
  git:
    repo: 'https://github.com/tmux-plugins/tpm'
    dest: "{{ lookup('env', 'HOME') }}/.tmux/plugins/tpm"
    force: yes
  tags:
    - devTools
    - macos
- name: Install luacheck
  become: yes
  shell: |
    luarocks install argparse
    luarocks install luacheck
  tags:
    - devTools
- name: Check terraform-ls installed
  ansible.builtin.shell: type terraform-ls
  register: check_terraform_ls
  ignore_errors: true
  tags:
    - devTools
    - terraform-ls
- name: Install gpg linux
  when: ansible_distribution == "Ubuntu" and check_terraform_ls.rc != 0
  become: yes
  apt:
    name: gpg
    update_cache: yes
  tags:
    - devTools
    - terraform-ls
- name: setup hashicorp repo
  become: true
  when: ansible_distribution == "Ubuntu" and check_terraform_ls.rc != 0
  shell: |
    wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  tags:
    - devTools
    - terraform-ls
- name: terraform-ls apt installation
  when: ansible_distribution == "Ubuntu" and check_terraform_ls.rc != 0
  become: true
  apt:
    update_cache: yes
    name: terraform-ls
  tags:
    - devTools
    - terraform-ls
- name: Install terraform-ls macos
  community.general.homebrew:
    name: "hashicorp/tap/terraform-ls"
    state: latest
  when: ansible_distribution == "MacOSX" and check_terraform_ls.rc != 0
  tags:
    - devTools
    - terraform-ls
- name: Valid terraform-ls installed
  when: check_terraform_ls.rc != 0
  ansible.builtin.shell: type terraform-ls
  tags:
    - devTools
    - terraform-ls
