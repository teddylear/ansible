# TODO: pyenv ubuntu
# TODO: tfenv ubuntu
# TODO: pkenv ubuntu
# TODO: fix flips back to system python
# - name: Install pipenv
  # community.general.homebrew:
    # name:  pipenv
    # state: latest
  # when: ansible_distribution == "MacOSX"
  # tags:
    # - devTools
    # - macos
    #
- name: devTools Macos
  community.general.homebrew:
    name: ["pipenv", "pyenv", "tfenv", "pkenv", "tmux", "ripgrep", "docker", "tree", "jq", "luarocks", "fzf"]
    state: latest
  when: ansible_distribution == "MacOSX"
  tags:
    - devTools
    - macos
- name: devtools Ubuntu
  apt:
    name: ["pipenv", "luarocks", "jq", "tree", "tmux", "docker", "ripgrep", "fzf"]
    state: latest
  when: ansible_distribution == "Ubuntu"
  become: yes
  tags:
    - devTools
    - ubuntu
- name: Install tmux plugin manager
  git:
    repo: 'https://github.com/tmux-plugins/tpm'
    dest: "{{ lookup('env', 'HOME') }}/.tmux/plugins/tpm"
    force: yes
  tags:
    - devTools
    - macos
- name: Install luacheck
  become: yes
  shell: |
    luarocks install argparse
    luarocks install luacheck
  tags:
    - devTools
- name: Check sd installed
  ansible.builtin.shell: type sd
  register: check_sd
  ignore_errors: true
  tags:
    - devTools
    - sd
- name: Install sd
  ansible.builtin.shell: cargo install sd
  when: check_sd.rc != 0
  tags:
    - devTools
    - sd
- name: Check procs installed
  ansible.builtin.shell: type procs
  register: check_procs
  ignore_errors: true
  tags:
    - devTools
    - procs
- name: Install procs
  ansible.builtin.shell: cargo install procs
  when: check_procs.rc != 0
  tags:
    - devTools
    - procs
- name: Check delta installed
  ansible.builtin.shell: type delta
  register: check_delta
  ignore_errors: true
  tags:
    - devTools
    - delta
- name: Install delta
  ansible.builtin.shell: cargo install git-delta
  when: check_delta.rc != 0
  tags:
    - devTools
    - delta
